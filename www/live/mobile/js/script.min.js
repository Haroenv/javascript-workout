require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"kLUUT7":[function(require,module,exports){
module.exports = (function(){
	
	var Constants = {
		GO_TO_PREVIOUS_SLIDE : 'goToPreviousSlide',
		GO_TO_NEXT_SLIDE : 'goToNextSlide',
		SET_CURRENT_SLIDE_INDEX : 'setCurrentSlideIndex',

		ROLE_PRESENTATION : 'presentation',
		ROLE_MOBILE : 'mobile',

		STATE_ACTIVE : 'active',
		STATE_INACTIVE : 'inactive',

		SET_SUBSTATE : 'setSubstate',

		SHAKE_YOUR_PHONES_INTRO : 'shakeYourPhonesIntro',
		SHAKE_YOUR_PHONES_GAME : 'shakeYourPhonesGame',
		SHAKE_YOUR_PHONES_FINISHED : 'shakeYourPhonesFinished',

		HIGHEST_HEARTRATE_GAME_INTRO : 'highestHeartrateGameIntro',
		HIGHEST_HEARTRATE_GAME_GAME : 'highestHeartrateGameGame',
		HIGHEST_HEARTRATE_GAME_FINISHED : 'highestHeartrateGameFinished',

		UPDATE_MAXIMUM_MOTION : 'updateMaximumMotion',
		HEART_RATE_POLAR : 'heartRatePolar',
		HEART_RATE_SPARK : 'heartRateSpark'
	};

	return Constants;

})();
},{}],"Constants":[function(require,module,exports){
module.exports=require('kLUUT7');
},{}],3:[function(require,module,exports){
module.exports = (function(){
	var Class = require('core/Class');
	var Slide = require('./Slide');
	var Constants = require('Constants');

	var Presentation = Class.extend({
		currentSlideIndex: 0,
		socket: false,
		iframes: [],
		numIframes: 3,
		slides: [],
		init: function() {
			console.log("[Presentation] init");

			this.createIframes();
			this.login();
		},

		createIframes: function() {
			for(var i = 0; i < this.numIframes; i++) {
				var $iframe = $('<iframe class="slide-frame" />');
				this.iframes.push($iframe);
				$('#presentation').append($iframe);
			}
		},

		login: function() {
			var that = this;
			$.post('/login', {
			}).done(function(result){
				that.slides = [];
				var numSlides = result.slides.length;
				for(var i = 0; i < numSlides; i++) {
					that.slides.push(new Slide(result.slides[i]));
				}
				that.connectSocket(result.token);
			});
		},

		connectSocket: function(token) {
			this.token = token;
			this.socket = io.connect('/', {
				query: 'token=' + token
			});
			this.socket.on('connect', $.proxy(this.socketConnectHandler, this));
			this.socket.on('disconnect', $.proxy(this.socketDisconnectHandler, this));
			this.socket.on('currentSlideIndexChanged', $.proxy(this.currentSlideIndexChangedHandler, this));
		},

		socketConnectHandler: function() {
		},

		socketDisconnectHandler: function() {
		},

		currentSlideIndexChangedHandler: function(currentSlideIndex) {
			currentSlideIndex = parseInt(currentSlideIndex);
			this.currentSlideIndex = currentSlideIndex;
			var currentSlide = this.getSlideByIndex(currentSlideIndex);
			var previousSlide = this.getSlideByIndex(currentSlideIndex - 1);
			var nextSlide = this.getSlideByIndex(currentSlideIndex + 1);
			//
			var currentIframe = this.getIframeForSlide(currentSlide, [previousSlide, nextSlide]);
			if(currentIframe) {
				currentSlide.attachToIframe(currentIframe, "slides/" + currentSlide.name + '.html?token=' + this.token);
				currentSlide.setState(Constants.STATE_ACTIVE);
				$(currentIframe).css('left', 0);
			}
			var previousIframe = this.getIframeForSlide(previousSlide, [currentSlide, nextSlide]);
			if(previousIframe) {
				previousSlide.attachToIframe(previousIframe, "slides/" + previousSlide.name + '.html?token=' + this.token);
				previousSlide.setState(Constants.STATE_INACTIVE);
				$(previousIframe).css('left', '-100%');
			}
			var nextIframe = this.getIframeForSlide(nextSlide, [previousSlide, currentSlide]);
			if(nextIframe) {
				nextSlide.attachToIframe(nextIframe, "slides/" + nextSlide.name + '.html?token=' + this.token);
				nextSlide.setState(Constants.STATE_INACTIVE);
				$(nextIframe).css('left', '100%');
			}
		},

		getSlideByIndex: function(index) {
			if(index >= 0 && index < this.slides.length) {
				return this.slides[index];
			}
			return false;
		},

		getIframeForSlide: function(slide, slidesNotToClear) {
			if(slide) {
				var $iframe = $('iframe[name=' + slide.name + ']');
				if($iframe.length > 0) {
					return $iframe[0];
				}
				//get a free iframe
				var slideNamesNotToClear = [];
				$(slidesNotToClear).each(function(index, obj){
					slideNamesNotToClear.push(obj.name);
				});
				var $iframes = $('iframe.slide-frame');
				for (var i = $iframes.length - 1; i >= 0; i--) {
					$iframe = $($iframes[i]);
					var name = $iframe.attr('name');
					if(!name || slideNamesNotToClear.indexOf(name) === -1) {
						return $iframe[0];
					}
				}
			}
			return false;
		}
	});

	return Presentation;

})();
},{"./Slide":4,"Constants":"kLUUT7","core/Class":"Hzu0go"}],4:[function(require,module,exports){
module.exports = (function(){
	var Class = require('core/Class');

	var Slide = Class.extend({
		init: function(data) {
			this.data = data;
			this.name = this.data.name;
			this._iframeLoadHandler = $.proxy(this.iframeLoadHandler, this);
		},
		attachToIframe: function(iframe, src) {
			this.iframe = iframe;
			$(iframe).off('load', this._iframeLoadHandler);
			$(iframe).attr('name', this.name);
			if(src !== $(iframe).attr('src')) {
				$(iframe).on('load', this._iframeLoadHandler);
				$(iframe).attr('src', src);
			}
		},
		setState: function(state) {
			this.state = state;
			var w = getIframeWindow(this.iframe);
			if(w && w.setState) {
				w.setState(state);
			}
		},
		iframeLoadHandler: function(event) {
			var w = getIframeWindow(this.iframe);
			if(w && w.setState) {
				w.setState(this.state);
			}
		}
	});

	function getIframeWindow(iframe_object) {
		  var doc;

		  if (iframe_object.contentWindow) {
		    return iframe_object.contentWindow;
		  }

		  if (iframe_object.window) {
		    return iframe_object.window;
		  } 

		  if (!doc && iframe_object.contentDocument) {
		    doc = iframe_object.contentDocument;
		  } 

		  if (!doc && iframe_object.document) {
		    doc = iframe_object.document;
		  }

		  if (doc && doc.defaultView) {
		   return doc.defaultView;
		  }

		  if (doc && doc.parentWindow) {
		    return doc.parentWindow;
		  }

		  return undefined;
		}

	return Slide;

})();
},{"core/Class":"Hzu0go"}],5:[function(require,module,exports){
module.exports = (function(){
	var Class = require('core/Class');
	var Constants = require('Constants');

	var ContentBase = Class.extend({
		fps: 60,
		_animationFrameId: false,
		_currentTime: 0,
		_delta: 0,
		_interval: false,
		_lastTime: new Date().getTime(),
		currentFrame: 0,
		init: function() {
			this.token = $.getUrlVar('token');
			window.setState = $.proxy(this.setState, this);
			this.__drawLoop = $.proxy(this._drawLoop, this);
			this._interval = 1000 / this.fps;
		},
		setState: function(state) {
			if(state !== this.state) {
				this.state = state;
				this.onStateChanged();
				if(this.state === Constants.STATE_ACTIVE) {
					this.currentFrame = 0;
					this._drawLoop();
				} else {
					window.cancelAnimationFrame(this._animationFrameId);
				}
			}
		},
		onStateChanged: function() {
		},
		_drawLoop: function() {
			this._animationFrameId = window.requestAnimationFrame(this.__drawLoop);
			this._currentTime = (new Date()).getTime();
		    this._delta = (this._currentTime - this._lastTime);
		    if(this._delta > this._interval) {
		    	this.currentFrame++;
		    	this.drawLoop();
		    	this._lastTime = this._currentTime - (this._delta % this._interval);
		    }
		},
		drawLoop: function() {
		}
	});

	return ContentBase;

})();
},{"Constants":"kLUUT7","core/Class":"Hzu0go"}],"classes/content/shake-your-phones":[function(require,module,exports){
module.exports=require('oLqZeW');
},{}],"oLqZeW":[function(require,module,exports){
module.exports = (function(){
	var ContentBase = require('../ContentBase');
	var Constants = require('Constants');

	var ShakeYourPhones = ContentBase.extend({
		currentMotion: 0,
		motion: 0,
		maximumMotion: 0,
		init: function() {
			this._super();
			console.log('[Mobile] shake your phones init');

			this.$background = $('.background');
			this.$background.css('top', '100%');
			this.$background.css('background-color', 'red');

			this.socket = io.connect('/', {
				query: 'token=' + this.token + "&slide=shake-your-phones"
			});

			this._motionUpdateHandler = $.proxy(this.motionUpdateHandler, this);

			this._socketConnectHandler = $.proxy(this.socketConnectHandler, this);
			this._socketDisconnectHandler = $.proxy(this.socketDisconnectHandler, this);
			this._setSubstateHandler = $.proxy(this.setSubstateHandler, this);

			this.socket.on('connect', this._socketConnectHandler);
			this.socket.on('disconnect', this._socketDisconnectHandler);
			this.socket.on(Constants.SET_SUBSTATE, this._setSubstateHandler);
		},

		onStateChanged: function() {
			if(this.state === Constants.STATE_ACTIVE) {
				this.maximumMotion = 0;
				if (window.DeviceMotionEvent) {
					window.addEventListener('devicemotion', this._motionUpdateHandler, false);
				} else {
					$('.acceleration').text('Not supported on your device :-(');
				}
			} else {
				window.removeEventListener('devicemotion', this._motionUpdateHandler);
			}
		},

		socketConnectHandler: function() {
		},

		socketDisconnectHandler: function() {
		},

		setSubstateHandler: function(substate) {
		},

		motionUpdateHandler: function(event) {
			this.currentMotion = event.interval * (Math.abs(event.acceleration.x) + Math.abs(event.acceleration.y) + Math.abs(event.acceleration.z));
		},

		drawLoop: function() {
			this.motion += this.currentMotion;
			this.motion *= 0.97;
			this.$background.css('top', 100 - this.motion + '%');
			this.maximumMotion = Math.max(this.maximumMotion, this.motion);
			if(this.currentFrame % 10 === 0 && this.maximumMotion !== this.lastSentMaximumMotion) {
				this.lastSentMaximumMotion = this.maximumMotion;
				this.socket.emit(Constants.UPDATE_MAXIMUM_MOTION, this.maximumMotion);
			}
		}
	});

	return ShakeYourPhones;

})();
},{"../ContentBase":5,"Constants":"kLUUT7"}],8:[function(require,module,exports){
(function(){

	function init() {
		if($('#presentation').length > 0) {
			var Presentation = require('./classes/Presentation');
			new Presentation();
		}
	}

	init();

})();
},{"./classes/Presentation":3}],"Hzu0go":[function(require,module,exports){
/* jshint ignore:start */
/* Simple JavaScript Inheritance
 * By John Resig http://ejohn.org/
 * MIT Licensed.
 */
// Inspired by base2 and Prototype
module.exports = (function(){
	var initializing = false, fnTest = /xyz/.test(function(){xyz;}) ? /\b_super\b/ : /.*/;

	// The base Class implementation (does nothing)
	this.Class = function(){};

	// Create a new Class that inherits from this class
	Class.extend = function(prop) {
		var _super = this.prototype;

		// Instantiate a base class (but only create the instance,
		// don't run the init constructor)
		initializing = true;
		var prototype = new this();
		initializing = false;

		// Copy the properties over onto the new prototype
		for (var name in prop) {
			// Check if we're overwriting an existing function
			prototype[name] = typeof prop[name] == "function" &&
				typeof _super[name] == "function" && fnTest.test(prop[name]) ?
				(function(name, fn){
					return function() {
						var tmp = this._super;

						// Add a new ._super() method that is the same method
						// but on the super-class
						this._super = _super[name];

						// The method only need to be bound temporarily, so we
						// remove it when we're done executing
						var ret = fn.apply(this, arguments);
						this._super = tmp;

						return ret;
					};
				})(name, prop[name]) :
				prop[name];
		}

		// The dummy class constructor
		function Class() {
			// All construction is actually done in the init method
			if ( !initializing && this.init )
				this.init.apply(this, arguments);
		}

		// Populate our constructed prototype object
		Class.prototype = prototype;

		// Enforce the constructor to be what we expect
		Class.prototype.constructor = Class;

		// And make this class extendable
		Class.extend = arguments.callee;

		return Class;
	};
	return Class;
})();
/* jshint ignore:end */
},{}],"core/Class":[function(require,module,exports){
module.exports=require('Hzu0go');
},{}]},{},[8])